<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="filecenter.dao.AccessInfoDao">
  <resultMap id="BaseResultMap" type="filecenter.model.AccessInfo">
    <id column="access_id" jdbcType="INTEGER" property="accessId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="file_id" jdbcType="INTEGER" property="fileId" />
    <result column="access_type" jdbcType="VARCHAR" property="accessType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    access_id, user_id, category_id, file_id, access_type
  </sql>
  <select id="selectByExample" parameterType="filecenter.model.AccessInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from access_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from access_info
    where access_id = #{accessId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from access_info
    where access_id = #{accessId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="filecenter.model.AccessInfoExample">
    delete from access_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="access_id" keyProperty="accessId" parameterType="filecenter.model.AccessInfo" useGeneratedKeys="true">
    insert into access_info (user_id, category_id, file_id, 
      access_type)
    values (#{userId,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{fileId,jdbcType=INTEGER}, 
      #{accessType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="access_id" keyProperty="accessId" parameterType="filecenter.model.AccessInfo" useGeneratedKeys="true">
    insert into access_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
      <if test="accessType != null">
        access_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="accessType != null">
        #{accessType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="filecenter.model.AccessInfoExample" resultType="java.lang.Long">
    select count(*) from access_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update access_info
    <set>
      <if test="record.accessId != null">
        access_id = #{record.accessId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.fileId != null">
        file_id = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.accessType != null">
        access_type = #{record.accessType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update access_info
    set access_id = #{record.accessId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      file_id = #{record.fileId,jdbcType=INTEGER},
      access_type = #{record.accessType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="filecenter.model.AccessInfo">
    update access_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=INTEGER},
      </if>
      <if test="accessType != null">
        access_type = #{accessType,jdbcType=VARCHAR},
      </if>
    </set>
    where access_id = #{accessId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="filecenter.model.AccessInfo">
    update access_info
    set user_id = #{userId,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      file_id = #{fileId,jdbcType=INTEGER},
      access_type = #{accessType,jdbcType=VARCHAR}
    where access_id = #{accessId,jdbcType=INTEGER}
  </update>
</mapper>